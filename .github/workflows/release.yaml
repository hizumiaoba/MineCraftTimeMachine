# This file enables app bump versions automatically.

name: Bump version

on:
  push:
    tags:
      - 'v*'

jobs:
  release:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v2

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Show release informations
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 $LATEST_TAG^)
          echo "LATEST_TAG=$LATEST_TAG"
          echo "PREVIOUS_TAG=$PREVIOUS_TAG"
          git log $PREVIOUS_TAG..$LATEST_TAG --pretty=format:"%h - %s (%an)" --no-merges
      - name: Create a github release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.tag_version.outputs.changelog }}
          draft: true
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
      - name: Grant execution permission for wrapper file
        run: chmod +x ./gradlew ./gradlew.bat
      - name: Gradle build action
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            jpackageImage
            -i
            --scan
      - name: compress artifact
        run: zip -r release.zip build/jpackage/MinecraftTimeMachine
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./release.zip
          asset_name: release.zip
          asset_content_type: application/zip
