# This file enables app bump versions automatically.

name: Bump version

on:
  push:
    tags:
      - 'v*'

jobs:

  compile:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
      - name: Grant execution permission for wrapper file
        run: chmod +x ./gradlew ./gradlew.bat
      - name: Gradle build action
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            shadowJar
            --scan
            --refresh-dependencies
            --no-build-cache

  release:

    # This job needs the compile job so that any compile error prevents generating a redundant release
    needs: compile

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v2

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dry_run: true
      - name: Show release informations
        id: diff
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0)
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 $LATEST_TAG^)
          CHANGES=$(git log $PREVIOUS_TAG..$LATEST_TAG --pretty=format:"- %s (%an)" --no-merges)
          echo "LATEST_TAG=$LATEST_TAG"
          echo "PREVIOUS_TAG=$PREVIOUS_TAG"
          echo "CHANGES=$CHANGES"
          echo "::set-output name=changelog::$CHANGES"
      - name: Create a github release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            このリリースでの変更点:
            
            ${{ steps.diff.outputs.changelog }}
          draft: true

  bash-artifact-upload:
    # uses shadowJar task to provide the artifact
    needs: release

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
      - name: Grant execution permission for wrapper file
        run: chmod +x ./gradlew
      - name: Gradle build action
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            shadowJar
            --stacktrace
      - name: upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.create_release.outputs.upload_url }}
          asset_path: build/libs/mctimemachine-all.jar
          asset_name: MinecraftTimeMachine-${{ github.ref }}-executable.jar
          asset-content-type: application/java-archive
